package net.tetragon.triggermusic.soundevents;

import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.sound.MusicSound;
import net.minecraft.sound.SoundEvent;
import net.minecraft.sound.SoundEvents;
import net.minecraft.util.Identifier;
import org.apache.logging.log4j.core.Core;

public class ModSoundEvents {
    public static final Identifier DESERT_FIELD_ID = Identifier.of("triggermusic:desert-field");
    public static final SoundEvent DESERT_FIELD = SoundEvent.of(DESERT_FIELD_ID);
    public static final Identifier GERUDO_RUINS_ID = Identifier.of("triggermusic:gerudo-ruins");
    public static final SoundEvent GERUDO_RUINS = SoundEvent.of(GERUDO_RUINS_ID);
    public static final Identifier LANAYRU_ID = Identifier.of("triggermusic:lanayru");
    public static final SoundEvent LANAYRU = SoundEvent.of(LANAYRU_ID);
    public static final Identifier GEOGLYPH_ID = Identifier.of("triggermusic:geoglyph");
    public static final SoundEvent GEOGLYPH = SoundEvent.of(GEOGLYPH_ID);
    public static final Identifier WASTELAND_ID = Identifier.of("triggermusic:wasteland");
    public static final SoundEvent WASTELAND = SoundEvent.of(WASTELAND_ID);
    public static final Identifier DRAGONHEAD_ID = Identifier.of("triggermusic:dragonhead");
    public static final SoundEvent DRAGONHEAD = SoundEvent.of(DRAGONHEAD_ID);
    public static final Identifier SHRINE_CAVE_ID= Identifier.of("triggermusic:shrine-cave");
    public static final SoundEvent SHRINE_CAVE = SoundEvent.of(SHRINE_CAVE_ID);
    public static final Identifier THUNDERHEAD_ID = Identifier.of("triggermusic:thunderhead");
    public static final SoundEvent THUNDERHEAD = SoundEvent.of(THUNDERHEAD_ID);
    public static final Identifier ZONAI_ID = Identifier.of("triggermusic:zonai");
    public static final SoundEvent ZONAI = SoundEvent.of(ZONAI_ID);
    public static final Identifier DEATH_MOUNTAIN_ID = Identifier.of("triggermusic:death-mountain");
    public static final SoundEvent DEATH_MOUNTAIN = SoundEvent.of(DEATH_MOUNTAIN_ID);
    public static final Identifier ELDIN_ID = Identifier.of("triggermusic:eldin");
    public static final SoundEvent ELDIN = SoundEvent.of(ELDIN_ID);
    public static final Identifier FIELD_VOLCANO_ID = Identifier.of("triggermusic:field-volcano");
    public static final SoundEvent FIELD_VOLCANO = SoundEvent.of(FIELD_VOLCANO_ID);
    public static final Identifier LURELIN_DAY_ID = Identifier.of("triggermusic:lurelin-day");
    public static final SoundEvent LURELIN_DAY = SoundEvent.of(LURELIN_DAY_ID);
    public static final Identifier LURELIN_NIGHT_ID = Identifier.of("triggermusic:lurelin-night");
    public static final SoundEvent LURELIN_NIGHT = SoundEvent.of(LURELIN_NIGHT_ID);
    public static final Identifier SEASIDE_ID = Identifier.of("triggermusic:seaside");
    public static final SoundEvent SEASIDE = SoundEvent.of(SEASIDE_ID);
    public static final Identifier KASS_ID = Identifier.of("triggermusic:kass");
    public static final SoundEvent KASS = SoundEvent.of(KASS_ID);
    public static final Identifier KASS_COVER_ID = Identifier.of("triggermusic:kass-cover");
    public static final SoundEvent KASS_COVER = SoundEvent.of(KASS_COVER_ID);
    public static final Identifier STORM_ID = Identifier.of("triggermusic:storm");
    public static final SoundEvent STORM = SoundEvent.of(STORM_ID);
    public static final Identifier FIELD_DAY_BOTW_ID = Identifier.of("triggermusic:field-day-botw");
    public static final SoundEvent FIELD_DAY_BOTW = SoundEvent.of(FIELD_DAY_BOTW_ID);
    public static final Identifier FIELD_NIGHT_BOTW_ID = Identifier.of("triggermusic:field-night-botw");
    public static final SoundEvent FIELD_NIGHT_BOTW = SoundEvent.of(FIELD_NIGHT_BOTW_ID);
    public static final Identifier FIELD_DAY_TOTK_ID = Identifier.of("triggermusic:field-day-totk");
    public static final SoundEvent FIELD_DAY_TOTK = SoundEvent.of(FIELD_DAY_TOTK_ID);
    public static final Identifier FIELD_NIGHT_TOTK_ID = Identifier.of("triggermusic:field-night-totk");
    public static final SoundEvent FIELD_NIGHT_TOTK = SoundEvent.of(FIELD_NIGHT_TOTK_ID);
    public static final Identifier FIELD_COLD_ID = Identifier.of("triggermusic:field-cold");
    public static final SoundEvent FIELD_COLD = SoundEvent.of(FIELD_COLD_ID);
    public static final Identifier RITO_FROZEN_ID = Identifier.of("triggermusic:rito-frozen");
    public static final SoundEvent RITO_FROZEN = SoundEvent.of(RITO_FROZEN_ID);
    public static final Identifier WIND_TEMPLE_ID = Identifier.of("triggermusic:wind-temple");
    public static final SoundEvent WIND_TEMPLE = SoundEvent.of(WIND_TEMPLE_ID);
    public static final Identifier RIDING_DAY_ID = Identifier.of("triggermusic:riding-day");
    public static final SoundEvent RIDING_DAY = SoundEvent.of(RIDING_DAY_ID);
    public static final Identifier RIDING_NIGHT_ID = Identifier.of("triggermusic:riding-night");
    public static final SoundEvent RIDING_NIGHT = SoundEvent.of(RIDING_NIGHT_ID);
    public static final Identifier ROCKY_ID = Identifier.of("triggermusic:rocky");
    public static final SoundEvent ROCKY = SoundEvent.of(ROCKY_ID);
    public static final Identifier TEMPLE_ID = Identifier.of("triggermusic:temple");
    public static final SoundEvent TEMPLE = SoundEvent.of(TEMPLE_ID);
    public static final Identifier MOUNTAIN_ID = Identifier.of("triggermusic:mountain");
    public static final SoundEvent MOUNTAIN = SoundEvent.of(MOUNTAIN_ID);
    public static final Identifier RUINS_ID = Identifier.of("triggermusic:ruins");
    public static final SoundEvent RUINS = SoundEvent.of(RUINS_ID);
    public static final Identifier CAVE_DAY_ID = Identifier.of("triggermusic:cave-day");
    public static final SoundEvent CAVE_DAY = SoundEvent.of(CAVE_DAY_ID);
    public static final Identifier CAVE_NIGHT_ID = Identifier.of("triggermusic:cave-night");
    public static final SoundEvent CAVE_NIGHT = SoundEvent.of(CAVE_NIGHT_ID);
    public static final Identifier DEPTHS_ID = Identifier.of("triggermusic:depths");
    public static final SoundEvent DEPTHS = SoundEvent.of(DEPTHS_ID);
    public static final Identifier DEPTHS_DIVE_ID = Identifier.of("triggermusic:depths-dive");
    public static final SoundEvent DEPTHS_DIVE = SoundEvent.of(DEPTHS_ID);
    public static final Identifier MINE_ID = Identifier.of("triggermusic:mine");
    public static final SoundEvent MINE = SoundEvent.of(MINE_ID);
    public static final Identifier GANONDORF_ID = Identifier.of("triggermusic:ganondorf");
    public static final SoundEvent GANONDORF = SoundEvent.of(GANONDORF_ID);
    public static final Identifier ASCEND_ID = Identifier.of("triggermusic:ascend");
    public static final SoundEvent ASCEND = SoundEvent.of(ASCEND_ID);
    public static final Identifier LIGHTROOT_ID = Identifier.of("triggermusic:lightroot");
    public static final SoundEvent LIGHTROOT = SoundEvent.of(LIGHTROOT_ID);
    public static final Identifier KAKARIKO_DAY_ID = Identifier.of("triggermusic:kakariko-day");
    public static final SoundEvent KAKARIKO_DAY = SoundEvent.of(KAKARIKO_DAY_ID);
    public static final Identifier KAKARIKO_NIGHT_ID = Identifier.of("triggermusic:kakariko-night");
    public static final SoundEvent KAKARIKO_NIGHT = SoundEvent.of(KAKARIKO_NIGHT_ID);
    public static final Identifier SKY_ID = Identifier.of("triggermusic:sky");
    public static final SoundEvent SKY = SoundEvent.of(SKY_ID);
    public static final Identifier SKYDIVE_ID = Identifier.of("triggermusic:skydive");
    public static final SoundEvent SKYDIVE = SoundEvent.of(SKYDIVE_ID);
    public static final Identifier SKY_GRAVITY_ID = Identifier.of("triggermusic:sky-gravity");
    public static final SoundEvent SKY_GRAVITY = SoundEvent.of(SKY_GRAVITY_ID);
    public static final Identifier LABYRINTH_ID = Identifier.of("triggermusic:labyrinth");
    public static final SoundEvent LABYRINTH = SoundEvent.of(LABYRINTH_ID);
    public static final Identifier LABYRINTH_DEPTHS_ID = Identifier.of("triggermusic:labyrinth-depths");
    public static final SoundEvent LABYRINTH_DEPTHS = SoundEvent.of(LABYRINTH_DEPTHS_ID);
    public static final Identifier LABYRINTH_SKY_ID = Identifier.of("triggermusic:labyrinth-sky");
    public static final SoundEvent LABYRINTH_SKY = SoundEvent.of(LABYRINTH_SKY_ID);
    public static final Identifier BENEATH_CASTLE_ID = Identifier.of("triggermusic:beneath-castle");
    public static final SoundEvent BENEATH_CASTLE = SoundEvent.of(BENEATH_CASTLE_ID);
    public static final Identifier GANON_CASTLE_ID = Identifier.of("triggermusic:ganon-castle");
    public static final SoundEvent GANON_CASTLE = SoundEvent.of(GANON_CASTLE_ID);
    public static final Identifier SPIRIT_ID = Identifier.of("triggermusic:spirit");
    public static final SoundEvent SPIRIT = SoundEvent.of(SPIRIT_ID);
    public static final Identifier KOROK_DAY_ID = Identifier.of("triggermusic:korok-day");
    public static final SoundEvent KOROK_DAY = SoundEvent.of(KOROK_DAY_ID);
    public static final Identifier KOROK_NIGHT_ID = Identifier.of("triggermusic:korok-night");
    public static final SoundEvent KOROK_NIGHT = SoundEvent.of(KOROK_NIGHT_ID);
    public static final Identifier CASTLE_SKY_ID = Identifier.of("triggermusic:castle-sky");
    public static final SoundEvent CASTLE_SKY = SoundEvent.of(CASTLE_SKY_ID);
    public static final Identifier CASTLE_ID = Identifier.of("triggermusic:castle");
    public static final SoundEvent CASTLE = SoundEvent.of(CASTLE_ID);
    public static final Identifier FIRE_ID = Identifier.of("triggermusic:fire");
    public static final SoundEvent FIRE = SoundEvent.of(FIRE_ID);
    public static final Identifier YIGA_ID = Identifier.of("triggermusic:yiga");
    public static final SoundEvent YIGA = SoundEvent.of(YIGA_ID);
    public static final Identifier ZORA_SLUDGE_ID = Identifier.of("triggermusic:zora-sludge");
    public static final SoundEvent ZORA_SLUDGE = SoundEvent.of(ZORA_SLUDGE_ID);
    public static final Identifier MONSTER_ID = Identifier.of("triggermusic:monster");
    public static final SoundEvent MONSTER = SoundEvent.of(MONSTER_ID);
    public static final Identifier GLEEOK_ID = Identifier.of("triggermusic:gleeok");
    public static final SoundEvent GLEEOK = SoundEvent.of(GLEEOK_ID);
    public static final Identifier ZORA_DAY_ID = Identifier.of("triggermusic:zora-day");
    public static final SoundEvent ZORA_DAY = SoundEvent.of(ZORA_DAY_ID);
    public static final Identifier ZORA_NIGHT_ID = Identifier.of("triggermusic:zora-night");
    public static final SoundEvent ZORA_NIGHT = SoundEvent.of(ZORA_NIGHT_ID);
    public static final Identifier GERUDO_DAY_ID = Identifier.of("triggermusic:gerudo-day");
    public static final SoundEvent GERUDO_DAY = SoundEvent.of(GERUDO_DAY_ID);
    public static final Identifier GERUDO_NIGHT_ID = Identifier.of("triggermusic:gerudo-night");
    public static final SoundEvent GERUDO_NIGHT = SoundEvent.of(GERUDO_NIGHT_ID);
    public static final Identifier HATENO_DAY_ID = Identifier.of("triggermusic:hateno-day");
    public static final SoundEvent HATENO_DAY = SoundEvent.of(HATENO_DAY_ID);
    public static final Identifier HATENO_NIGHT_ID = Identifier.of("triggermusic:hateno-night");
    public static final SoundEvent HATENO_NIGHT = SoundEvent.of(HATENO_NIGHT_ID);
    public static final Identifier TARREY_ID = Identifier.of("triggermusic:tarrey");
    public static final SoundEvent TARREY = SoundEvent.of(TARREY_ID);
    public static final Identifier BATTLE_BOTW_ID = Identifier.of("triggermusic:battle-botw");
    public static final SoundEvent BATTLE_BOTW = SoundEvent.of(BATTLE_BOTW_ID);
    public static final Identifier BATTLE_CHASM_ID = Identifier.of("triggermusic:battle-chasm");
    public static final SoundEvent BATTLE_CHASM = SoundEvent.of(BATTLE_CHASM_ID);
    public static final Identifier BATTLE_DIVINE_ID = Identifier.of("triggermusic:battle-divine");
    public static final SoundEvent BATTLE_DIVINE = SoundEvent.of(BATTLE_DIVINE_ID);
    public static final Identifier BATTLE_DUNGEON_ID = Identifier.of("triggermusic:battle-dungeon");
    public static final SoundEvent BATTLE_DUNGEON = SoundEvent.of(BATTLE_DUNGEON_ID);
    public static final Identifier BATTLE_MOLDUGA_ID = Identifier.of("triggermusic:battle-molduga");
    public static final SoundEvent BATTLE_MOLDUGA = SoundEvent.of(BATTLE_MOLDUGA_ID);
    public static final Identifier BATTLE_TOTK_ID = Identifier.of("triggermusic:battle-totk");
    public static final SoundEvent BATTLE_TOTK = SoundEvent.of(BATTLE_TOTK_ID);
    public static final Identifier BEAST_ID = Identifier.of("triggermusic:beast");
    public static final SoundEvent BEAST = SoundEvent.of(BEAST_ID);
    public static final Identifier DRAGON_ID = Identifier.of("triggermusic:dragon");
    public static final SoundEvent DRAGON = SoundEvent.of(DRAGON_ID);
    public static final Identifier GANON2_ID = Identifier.of("triggermusic:ganon2");
    public static final SoundEvent GANON2 = SoundEvent.of(GANON2_ID);
    public static final Identifier GANON3_ID = Identifier.of("triggermusic:ganon3");
    public static final SoundEvent GANON3 = SoundEvent.of(GANON3_ID);
    public static final Identifier GLOOM_ID = Identifier.of("triggermusic:gloom");
    public static final SoundEvent GLOOM = SoundEvent.of(GLOOM_ID);
    public static final Identifier KOHGA_ID = Identifier.of("triggermusic:kohga");
    public static final SoundEvent KOHGA = SoundEvent.of(KOHGA_ID);
    public static final Identifier STRONG_TOTK_ID = Identifier.of("triggermusic:strong-totk");
    public static final SoundEvent STRONG_TOTK = SoundEvent.of(STRONG_TOTK_ID);
    public static final Identifier STRONG_BOTW_ID = Identifier.of("triggermusic:strong-botw");
    public static final SoundEvent STRONG_BOTW = SoundEvent.of(STRONG_BOTW_ID);
    public static final Identifier HAMSTER_ID = Identifier.of("triggermusic:hamster");
    public static final SoundEvent HAMSTER = SoundEvent.of(HAMSTER_ID);
    public static final Identifier NABORIS_ID = Identifier.of("triggermusic:naboris");
    public static final SoundEvent NABORIS = SoundEvent.of(NABORIS_ID);
    public static final Identifier CALAMITY1_ID = Identifier.of("triggermusic:calamity1");
    public static final SoundEvent CALAMITY1 = SoundEvent.of(CALAMITY1_ID);
    public static final Identifier CALAMITY2_ID = Identifier.of("triggermusic:calamity2");
    public static final SoundEvent CALAMITY2 = SoundEvent.of(CALAMITY2_ID);
    public static final Identifier GOHMA_ID = Identifier.of("triggermusic:gohma");
    public static final SoundEvent GOHMA = SoundEvent.of(GOHMA_ID);
    public static final Identifier GIBDO_ID = Identifier.of("triggermusic:gibdo");
    public static final SoundEvent GIBDO = SoundEvent.of(GIBDO_ID);
    public static final Identifier FLUX_ID = Identifier.of("triggermusic:flux");
    public static final SoundEvent FLUX = SoundEvent.of(FLUX_ID);
    public static final Identifier FROX_ID = Identifier.of("triggermusic:frox");
    public static final SoundEvent FROX = SoundEvent.of(FROX_ID);
    public static final Identifier COLGERA1_ID = Identifier.of("triggermusic:colgera1");
    public static final SoundEvent COLGERA1 = SoundEvent.of(COLGERA1_ID);
    public static final Identifier COLGERA2_ID = Identifier.of("triggermusic:colgera2");
    public static final SoundEvent COLGERA2 = SoundEvent.of(COLGERA2_ID);
    public static final Identifier CORE_ID = Identifier.of("triggermusic:core");
    public static final SoundEvent CORE = SoundEvent.of(CORE_ID);
    public static final Identifier EDORAS_ID = Identifier.of("triggermusic:edoras");
    public static final SoundEvent EDORAS = SoundEvent.of(EDORAS_ID);
    public static final Identifier ELVES_ID = Identifier.of("triggermusic:elves");
    public static final SoundEvent ELVES = SoundEvent.of(ELVES_ID);
    public static final Identifier END_ID = Identifier.of("triggermusic:end");
    public static final SoundEvent END = SoundEvent.of(END_ID);
    public static final Identifier HOBBITS_ID = Identifier.of("triggermusic:hobbits");
    public static final SoundEvent HOBBTIS = SoundEvent.of(HOBBITS_ID);
    public static final Identifier HOPES_ID = Identifier.of("triggermusic:hopes");
    public static final SoundEvent HOPES = SoundEvent.of(HOPES_ID);
    public static final Identifier MEDIUM_ID = Identifier.of("triggermusic:medium");
    public static final SoundEvent MEDIUM = SoundEvent.of(MEDIUM_ID);
    public static final Identifier PAST_ID = Identifier.of("triggermusic:past");
    public static final SoundEvent PAST = SoundEvent.of(PAST_ID);
    public static final Identifier RUINSU_ID = Identifier.of("triggermusic:ruinsu");
    public static final SoundEvent RUINSU = SoundEvent.of(RUINSU_ID);
    public static final Identifier SCARLET_ID = Identifier.of("triggermusic:scarlet");
    public static final SoundEvent SCARLET = SoundEvent.of(SCARLET_ID);
    public static final Identifier SHORTCUT_ID = Identifier.of("triggermusic:shortcut");
    public static final SoundEvent SHORTCUT = SoundEvent.of(SHORTCUT_ID);
    public static final Identifier SNOWDIN_ID = Identifier.of("triggermusic:snowdin");
    public static final SoundEvent SNOWDIN = SoundEvent.of(SNOWDIN_ID);
    public static final Identifier SNOWY_ID = Identifier.of("triggermusic:snowy");
    public static final SoundEvent SNOWY = SoundEvent.of(SNOWY_ID);
    public static final Identifier WATERFALL_ID = Identifier.of("triggermusic:waterfall");
    public static final SoundEvent WATERFALL = SoundEvent.of(WATERFALL_ID);
    public static final Identifier WEATHERTOP_ID = Identifier.of("triggermusic:weathertop");
    public static final SoundEvent WEATHERTOP = SoundEvent.of(WEATHERTOP_ID);
    public static final Identifier DURIN_ID = Identifier.of("triggermusic:durin");
    public static final SoundEvent DURIN = SoundEvent.of(DURIN_ID);
    public static final Identifier MOLGERA_ID = Identifier.of("triggermusic:molgera");
    public static final SoundEvent MOLGERA = SoundEvent.of(MOLGERA_ID);
    public static final Identifier CRYSTAL_ID = Identifier.of("triggermusic:crystal");
    public static final SoundEvent CRYSTAL = SoundEvent.of(CRYSTAL_ID);
    public static final Identifier TEARS_ID = Identifier.of("triggermusic:tears");
    public static final SoundEvent TEARS = SoundEvent.of(TEARS_ID);
    public static final Identifier GREENPATH_ID = Identifier.of("triggermusic:greenpath");
    public static final SoundEvent GREENPATH = SoundEvent.of(GREENPATH_ID);
    public static final Identifier CROSSROADS_ID = Identifier.of("triggermusic:crossroads");
    public static final SoundEvent CROSSROADS = SoundEvent.of(CROSSROADS_ID);
    public static final Identifier EDGE_ID = Identifier.of("triggermusic:edge");
    public static final SoundEvent EDGE = SoundEvent.of(EDGE_ID);
    public static final Identifier WHISPER_ID = Identifier.of("triggermusic:whisper");
    public static final SoundEvent WHISPER = SoundEvent.of(WHISPER_ID);
    public static final Identifier AVATAR_ID = Identifier.of("triggermusic:avatar");
    public static final SoundEvent AVATAR = SoundEvent.of(AVATAR_ID);
    public static final Identifier BOSS_BOKO_ID = Identifier.of("triggermusic:boss-boko");
    public static final SoundEvent BOSS_BOKO = SoundEvent.of(BOSS_BOKO_ID);
    public static final Identifier CAVALRY_ID = Identifier.of("triggermusic:cavalry");
    public static final SoundEvent CAVALRY = SoundEvent.of(CAVALRY_ID);
    public static final Identifier FINAL_BATTLE_ID = Identifier.of("triggermusic:final-battle");
    public static final SoundEvent FINAL_BATTLE = SoundEvent.of(FINAL_BATTLE_ID);
    public static final Identifier FOE_ID = Identifier.of("triggermusic:foe");
    public static final SoundEvent FOE = SoundEvent.of(FOE_ID);
    public static final Identifier GODRICK_ID = Identifier.of("triggermusic:godrick");
    public static final SoundEvent GODRICK = SoundEvent.of(GODRICK_ID);
    public static final Identifier GODSKIN_ID = Identifier.of("triggermusic:godskin");
    public static final SoundEvent GODSKIN = SoundEvent.of(GODSKIN_ID);
    public static final Identifier LEYNDELL_ID = Identifier.of("triggermusic:leyndell");
    public static final SoundEvent LEYNDELL = SoundEvent.of(LEYNDELL_ID);
    public static final Identifier LIMGRAVE_ID = Identifier.of("triggermusic:limgrave");
    public static final SoundEvent LIMGRAVE = SoundEvent.of(LIMGRAVE_ID);
    public static final Identifier LIURNIA_ID = Identifier.of("triggermusic:liurnia");
    public static final SoundEvent LIURNIA = SoundEvent.of(LIURNIA_ID);
    public static final Identifier MARGIT_ID = Identifier.of("triggermusic:margit");
    public static final SoundEvent MARGIT = SoundEvent.of(MARGIT_ID);
    public static final Identifier MONSTER_AMBIENCE_ID = Identifier.of("triggermusic:monster-ambience");
    public static final SoundEvent MONSTER_AMBIENCE = SoundEvent.of(MONSTER_AMBIENCE_ID);
    public static final Identifier MONSTER_FORCES_ID = Identifier.of("triggermusic:monster-forces");
    public static final SoundEvent MONSTER_FORCES = SoundEvent.of(MONSTER_FORCES_ID);
    public static final Identifier RIVER_ID = Identifier.of("triggermusic:river");
    public static final SoundEvent RIVER = SoundEvent.of(RIVER_ID);
    public static final Identifier ROUNDTABLE_ID = Identifier.of("triggermusic:roundtable");
    public static final SoundEvent ROUNDTABLE = SoundEvent.of(ROUNDTABLE_ID);
    public static final Identifier SENTINEL_ID = Identifier.of("triggermusic:sentinel");
    public static final SoundEvent SENTINEL = SoundEvent.of(SENTINEL_ID);
    public static final Identifier SEWERS_ID = Identifier.of("triggermusic:sewers");
    public static final SoundEvent SEWERS = SoundEvent.of(SEWERS_ID);
    public static final Identifier STORMVEIL_ID = Identifier.of("triggermusic:stormveil");
    public static final SoundEvent STORMVEIL = SoundEvent.of(STORMVEIL_ID);
    public static final Identifier WARRIORS_ID = Identifier.of("triggermusic:warriors");
    public static final SoundEvent WARRIORS = SoundEvent.of(WARRIORS_ID);

    public static void registerSoundEvents(){
        Registry.register(Registries.SOUND_EVENT, DESERT_FIELD_ID, DESERT_FIELD);
        Registry.register(Registries.SOUND_EVENT, GERUDO_RUINS_ID, GERUDO_RUINS);
        Registry.register(Registries.SOUND_EVENT, LANAYRU_ID, LANAYRU);
        Registry.register(Registries.SOUND_EVENT, GEOGLYPH_ID, GEOGLYPH);
        Registry.register(Registries.SOUND_EVENT, WASTELAND_ID, WASTELAND);
        Registry.register(Registries.SOUND_EVENT, DRAGONHEAD_ID, DRAGONHEAD);
        Registry.register(Registries.SOUND_EVENT, SHRINE_CAVE_ID, SHRINE_CAVE);
        Registry.register(Registries.SOUND_EVENT, THUNDERHEAD_ID, THUNDERHEAD);
        Registry.register(Registries.SOUND_EVENT, ZONAI_ID, ZONAI);
        Registry.register(Registries.SOUND_EVENT,DEATH_MOUNTAIN_ID , DEATH_MOUNTAIN);
        Registry.register(Registries.SOUND_EVENT, ELDIN_ID, ELDIN);
        Registry.register(Registries.SOUND_EVENT, FIELD_VOLCANO_ID, FIELD_VOLCANO);
        Registry.register(Registries.SOUND_EVENT, LURELIN_DAY_ID, LURELIN_DAY);
        Registry.register(Registries.SOUND_EVENT, LURELIN_NIGHT_ID, LURELIN_NIGHT);
        Registry.register(Registries.SOUND_EVENT, SEASIDE_ID, SEASIDE);
        Registry.register(Registries.SOUND_EVENT, KASS_ID, KASS);
        Registry.register(Registries.SOUND_EVENT, KASS_COVER_ID, KASS_COVER);
        Registry.register(Registries.SOUND_EVENT, STORM_ID, STORM);
        Registry.register(Registries.SOUND_EVENT, FIELD_DAY_BOTW_ID, FIELD_DAY_BOTW);
        Registry.register(Registries.SOUND_EVENT, FIELD_NIGHT_BOTW_ID, FIELD_NIGHT_BOTW);
        Registry.register(Registries.SOUND_EVENT, FIELD_DAY_TOTK_ID, FIELD_DAY_TOTK);
        Registry.register(Registries.SOUND_EVENT, FIELD_NIGHT_TOTK_ID, FIELD_NIGHT_TOTK);
        Registry.register(Registries.SOUND_EVENT, FIELD_COLD_ID, FIELD_COLD);
        Registry.register(Registries.SOUND_EVENT, RITO_FROZEN_ID, RITO_FROZEN);
        Registry.register(Registries.SOUND_EVENT, WIND_TEMPLE_ID, WIND_TEMPLE);
        Registry.register(Registries.SOUND_EVENT, RIDING_DAY_ID, RIDING_DAY);
        Registry.register(Registries.SOUND_EVENT, RIDING_NIGHT_ID, RIDING_NIGHT);
        Registry.register(Registries.SOUND_EVENT, ROCKY_ID, ROCKY);
        Registry.register(Registries.SOUND_EVENT, TEMPLE_ID, TEMPLE);
        Registry.register(Registries.SOUND_EVENT, MOUNTAIN_ID, MOUNTAIN);
        Registry.register(Registries.SOUND_EVENT, RUINS_ID, RUINS);
        Registry.register(Registries.SOUND_EVENT, CAVE_DAY_ID, CAVE_DAY);
        Registry.register(Registries.SOUND_EVENT, CAVE_NIGHT_ID, CAVE_NIGHT);
        Registry.register(Registries.SOUND_EVENT, DEPTHS_ID, DEPTHS);
        Registry.register(Registries.SOUND_EVENT, DEPTHS_DIVE_ID, DEPTHS_DIVE);
        Registry.register(Registries.SOUND_EVENT, MINE_ID, MINE);
        Registry.register(Registries.SOUND_EVENT, GANONDORF_ID, GANONDORF);
        Registry.register(Registries.SOUND_EVENT, ASCEND_ID, ASCEND);
        Registry.register(Registries.SOUND_EVENT, LIGHTROOT_ID, LIGHTROOT);
        Registry.register(Registries.SOUND_EVENT, KAKARIKO_DAY_ID, KAKARIKO_DAY);
        Registry.register(Registries.SOUND_EVENT, KAKARIKO_NIGHT_ID, KAKARIKO_NIGHT);
        Registry.register(Registries.SOUND_EVENT, SKY_ID, SKY);
        Registry.register(Registries.SOUND_EVENT, SKYDIVE_ID, SKYDIVE);
        Registry.register(Registries.SOUND_EVENT, SKY_GRAVITY_ID, SKY_GRAVITY);
        Registry.register(Registries.SOUND_EVENT, LABYRINTH_ID, LABYRINTH);
        Registry.register(Registries.SOUND_EVENT, LABYRINTH_DEPTHS_ID, LABYRINTH_DEPTHS);
        Registry.register(Registries.SOUND_EVENT, BENEATH_CASTLE_ID, BENEATH_CASTLE);
        Registry.register(Registries.SOUND_EVENT, GANON_CASTLE_ID, GANON_CASTLE);
        Registry.register(Registries.SOUND_EVENT, SPIRIT_ID, SPIRIT);
        Registry.register(Registries.SOUND_EVENT, KOROK_DAY_ID, KOROK_DAY);
        Registry.register(Registries.SOUND_EVENT, KOROK_NIGHT_ID, KOROK_NIGHT);
        Registry.register(Registries.SOUND_EVENT, CASTLE_ID, CASTLE);
        Registry.register(Registries.SOUND_EVENT, CASTLE_SKY_ID, CASTLE_SKY);
        Registry.register(Registries.SOUND_EVENT, FIRE_ID, FIRE);
        Registry.register(Registries.SOUND_EVENT, YIGA_ID, YIGA);
        Registry.register(Registries.SOUND_EVENT, ZORA_SLUDGE_ID, ZORA_SLUDGE);
        Registry.register(Registries.SOUND_EVENT, MONSTER_ID, MONSTER);
        Registry.register(Registries.SOUND_EVENT, GLEEOK_ID, GLEEOK);
        Registry.register(Registries.SOUND_EVENT, ZORA_DAY_ID, ZORA_DAY);
        Registry.register(Registries.SOUND_EVENT, ZORA_NIGHT_ID, ZORA_NIGHT);
        Registry.register(Registries.SOUND_EVENT, GERUDO_DAY_ID, GERUDO_DAY);
        Registry.register(Registries.SOUND_EVENT, GERUDO_NIGHT_ID, GERUDO_NIGHT);
        Registry.register(Registries.SOUND_EVENT, HATENO_DAY_ID, HATENO_DAY);
        Registry.register(Registries.SOUND_EVENT, HATENO_NIGHT_ID, HATENO_NIGHT);
        Registry.register(Registries.SOUND_EVENT, TARREY_ID, TARREY);
        Registry.register(Registries.SOUND_EVENT, BATTLE_BOTW_ID, BATTLE_BOTW);
        Registry.register(Registries.SOUND_EVENT, BATTLE_CHASM_ID, BATTLE_CHASM);
        Registry.register(Registries.SOUND_EVENT, BATTLE_DIVINE_ID, BATTLE_DIVINE);
        Registry.register(Registries.SOUND_EVENT, BATTLE_DUNGEON_ID, BATTLE_DUNGEON);
        Registry.register(Registries.SOUND_EVENT, BATTLE_MOLDUGA_ID, BATTLE_MOLDUGA);
        Registry.register(Registries.SOUND_EVENT, BATTLE_TOTK_ID, BATTLE_TOTK);
        Registry.register(Registries.SOUND_EVENT, BEAST_ID, BEAST);
        Registry.register(Registries.SOUND_EVENT, DRAGON_ID, DRAGON);
        Registry.register(Registries.SOUND_EVENT, GANON2_ID, GANON2);
        Registry.register(Registries.SOUND_EVENT, GANON3_ID, GANON3);
        Registry.register(Registries.SOUND_EVENT, GLOOM_ID, GLOOM);
        Registry.register(Registries.SOUND_EVENT, KOHGA_ID, KOHGA);
        Registry.register(Registries.SOUND_EVENT, STRONG_TOTK_ID, STRONG_TOTK);
        Registry.register(Registries.SOUND_EVENT, HAMSTER_ID, HAMSTER);
        Registry.register(Registries.SOUND_EVENT, NABORIS_ID, NABORIS);
        Registry.register(Registries.SOUND_EVENT, CALAMITY1_ID, CALAMITY1);
        Registry.register(Registries.SOUND_EVENT, CALAMITY2_ID, CALAMITY2);
        Registry.register(Registries.SOUND_EVENT, GOHMA_ID, GOHMA);
        Registry.register(Registries.SOUND_EVENT, GIBDO_ID, GIBDO);
        Registry.register(Registries.SOUND_EVENT, FLUX_ID, FLUX);
        Registry.register(Registries.SOUND_EVENT, FROX_ID, FROX);
        Registry.register(Registries.SOUND_EVENT, COLGERA1_ID, COLGERA1);
        Registry.register(Registries.SOUND_EVENT, COLGERA2_ID, COLGERA2);
        Registry.register(Registries.SOUND_EVENT, CORE_ID, CORE);
        Registry.register(Registries.SOUND_EVENT, DURIN_ID, DURIN);
        Registry.register(Registries.SOUND_EVENT, EDORAS_ID, EDORAS);
        Registry.register(Registries.SOUND_EVENT, ELVES_ID, ELVES);
        Registry.register(Registries.SOUND_EVENT, END_ID, END);
        Registry.register(Registries.SOUND_EVENT, HOBBITS_ID, HOBBTIS);
        Registry.register(Registries.SOUND_EVENT, HOPES_ID, HOPES);
        Registry.register(Registries.SOUND_EVENT, MEDIUM_ID, MEDIUM);
        Registry.register(Registries.SOUND_EVENT, MOLGERA_ID, MOLGERA);
        Registry.register(Registries.SOUND_EVENT, PAST_ID, PAST);
        Registry.register(Registries.SOUND_EVENT, RUINSU_ID, RUINSU);
        Registry.register(Registries.SOUND_EVENT, SCARLET_ID, SCARLET);
        Registry.register(Registries.SOUND_EVENT, SHORTCUT_ID, SHORTCUT);
        Registry.register(Registries.SOUND_EVENT, SNOWDIN_ID, SNOWDIN);
        Registry.register(Registries.SOUND_EVENT, SNOWY_ID, SNOWY);
        Registry.register(Registries.SOUND_EVENT, WATERFALL_ID, WATERFALL);
        Registry.register(Registries.SOUND_EVENT, WEATHERTOP_ID, WEATHERTOP);
        Registry.register(Registries.SOUND_EVENT, CRYSTAL_ID, CRYSTAL);
        Registry.register(Registries.SOUND_EVENT, TEARS_ID, TEARS);
        Registry.register(Registries.SOUND_EVENT, GREENPATH_ID, GREENPATH);
        Registry.register(Registries.SOUND_EVENT, CROSSROADS_ID, CROSSROADS);
        Registry.register(Registries.SOUND_EVENT, EDGE_ID, EDGE);
        Registry.register(Registries.SOUND_EVENT, WHISPER_ID, WHISPER);
        Registry.register(Registries.SOUND_EVENT, AVATAR_ID, AVATAR);
        Registry.register(Registries.SOUND_EVENT, BOSS_BOKO_ID, BOSS_BOKO);
        Registry.register(Registries.SOUND_EVENT, CAVALRY_ID, CAVALRY);
        Registry.register(Registries.SOUND_EVENT, FINAL_BATTLE_ID, FINAL_BATTLE);
        Registry.register(Registries.SOUND_EVENT, FOE_ID, FOE);
        Registry.register(Registries.SOUND_EVENT, GODRICK_ID, GODRICK);
        Registry.register(Registries.SOUND_EVENT, GODSKIN_ID, GODSKIN);
        Registry.register(Registries.SOUND_EVENT, LEYNDELL_ID, LEYNDELL);
        Registry.register(Registries.SOUND_EVENT, LIMGRAVE_ID, LIMGRAVE);
        Registry.register(Registries.SOUND_EVENT, LIURNIA_ID, LIURNIA);
        Registry.register(Registries.SOUND_EVENT, MONSTER_AMBIENCE_ID, MONSTER_AMBIENCE);
        Registry.register(Registries.SOUND_EVENT, MONSTER_FORCES_ID, MONSTER_FORCES);
        Registry.register(Registries.SOUND_EVENT, RIVER_ID, RIVER);
        Registry.register(Registries.SOUND_EVENT, ROUNDTABLE_ID, ROUNDTABLE);
        Registry.register(Registries.SOUND_EVENT, SENTINEL_ID, SENTINEL);
        Registry.register(Registries.SOUND_EVENT, SEWERS_ID, SEWERS);
        Registry.register(Registries.SOUND_EVENT, STORMVEIL_ID, STORMVEIL);
        Registry.register(Registries.SOUND_EVENT, MARGIT_ID, MARGIT);
        Registry.register(Registries.SOUND_EVENT, WARRIORS_ID, WARRIORS);
    }
}
